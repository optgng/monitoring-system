version: '3.8'

services:
  # PostgreSQL database for Keycloak
  postgres:
    image: postgres:15-alpine
    container_name: keycloak-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - monitoring-network
    restart: unless-stopped

  # Keycloak service for authentication and authorization
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: 
      - start-dev
      # Uncomment for production deployment
      # - start
      # - --optimized
    environment:
      # Database connection
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak_password
      
      # Admin user setup
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin_password
      
      # Hostname settings
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HTTP_ENABLED: "true"
      # Uncomment for production with proper domain
      # KC_HOSTNAME: keycloak.yourdomain.com
      
      # Proxy settings if behind a load balancer/reverse proxy
      # KC_PROXY: edge
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 30s
    volumes:
      - keycloak_data:/opt/keycloak/data
      # Mount initialization scripts if needed
      - ./keycloak-init:/opt/keycloak/data/import
    networks:
      - monitoring-network
    restart: unless-stopped

  # Next.js Web UI application
  webui:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: monitoring-webui
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      # NextAuth configuration
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      
      # Keycloak connection
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      KEYCLOAK_ISSUER: http://keycloak:8080/realms/monitoring
      
      # Set to internal Keycloak URL for server-to-server communication
      # For production with external URL, use https://keycloak.yourdomain.com/realms/monitoring 
    depends_on:
      keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - monitoring-network
    restart: unless-stopped

networks:
  monitoring-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  keycloak_data:
    driver: local
